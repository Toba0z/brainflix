{"ast":null,"code":"var _jsxFileName = \"/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/SideVideos/SideVideos.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./SideVideos.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SideVideos = ({\n  videosInfo,\n  selectedVideoInfo,\n  setSelectedVideoInfo\n}) => {\n  _s();\n  const {\n    videoId\n  } = useParams();\n  const defaultVideoId = \"84e96018-4022-434e-80bf-000ce4cd12b8\";\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n  useEffect(() => {\n    const fetchVideoDetails = async id => {\n      const url = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${id}?api_key=${brainFlixApiKey}`;\n      try {\n        const {\n          data\n        } = await axios.get(url);\n        setSelectedVideoInfo(data);\n      } catch (error) {\n        console.error(\"Could not fetch video details!\", error);\n      }\n    };\n    fetchVideoDetails(videoId || defaultVideoId);\n  }, [videoId]);\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidevideos\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"sidevideos__title\",\n      children: \"Next Video\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sidevideos__list\",\n      children: videosInfo.filter(video => video.id !== selectedVideoInfo.id).map(video => /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${video.id}`,\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"sidevideo__item\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: video.image,\n            alt: video.title,\n            className: \"sidevideo__image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sidevideo__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"sidevideo__title\",\n              children: video.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"sidevideo__channel\",\n              children: video.channel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 15\n        }, this)\n      }, video.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(SideVideos, \"Uar2BbWcvbdlTy34LlkSU04cyrM=\", false, function () {\n  return [useParams];\n});\n_c = SideVideos;\nexport default SideVideos;\nvar _c;\n$RefreshReg$(_c, \"SideVideos\");","map":{"version":3,"names":["React","Link","useEffect","useParams","axios","jsxDEV","_jsxDEV","SideVideos","videosInfo","selectedVideoInfo","setSelectedVideoInfo","_s","videoId","defaultVideoId","brainFlixApiKey","fetchVideoDetails","id","url","data","get","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","filter","video","map","to","src","image","alt","title","channel","_c","$RefreshReg$"],"sources":["/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/SideVideos/SideVideos.jsx"],"sourcesContent":["import React from \"react\";\nimport \"./SideVideos.scss\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst SideVideos = ({ videosInfo, selectedVideoInfo, setSelectedVideoInfo}) => {\n\n  const { videoId } = useParams();\n\n  const defaultVideoId = \"84e96018-4022-434e-80bf-000ce4cd12b8\";\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n\n  useEffect(() => {\n    const fetchVideoDetails = async(id)=>{\n      const url = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${id}?api_key=${brainFlixApiKey}`;\n    try {\n      const { data } = await axios.get(url);\n      setSelectedVideoInfo(data);\n    } catch (error) {\n      console.error(\"Could not fetch video details!\", error);\n    }\n    }\n    fetchVideoDetails(videoId || defaultVideoId);\n  }, [videoId]); \n\n  return (\n    <aside className=\"sidevideos\">\n      <h4 className=\"sidevideos__title\">Next Video</h4>\n      <ul className=\"sidevideos__list\">\n        {videosInfo\n          .filter((video) => video.id !== selectedVideoInfo.id)\n          .map((video) => (\n            <Link key={video.id} to={`/${video.id}`}>\n              <li className=\"sidevideo__item\">\n                <img\n                  src={video.image}\n                  alt={video.title}\n                  className=\"sidevideo__image\"\n                />\n                <div className=\"sidevideo__info\">\n                  <h5 className=\"sidevideo__title\">{video.title}</h5>\n                  <p className=\"sidevideo__channel\">{video.channel}</p>\n                </div>\n              </li>\n            </Link>\n          ))}\n      </ul>\n    </aside>\n  );\n};\nexport default SideVideos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}