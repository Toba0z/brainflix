{"ast":null,"code":"var _jsxFileName = \"/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/Comment/Comment.jsx\",\n  _s = $RefreshSig$();\n// Comment.jsx\nimport React from \"react\";\nimport \"./Comment.scss\";\n// Import statements to include avatar and comment button icon images from assets\nimport avatarImage from \"../../assets/Images/Mohan-muruge.jpg\";\nimport commentButtonICon from \"../../assets/Icons/add_comment.svg\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  selectedVideoInfo,\n  dateAndTimeOfComment,\n  fetchVideoDetails\n}) => {\n  _s();\n  var _selectedVideoInfo$co, _selectedVideoInfo$co2;\n  const [newComment, setNewComment] = useState({\n    comment: \"\",\n    name: \"\"\n  });\n  // const handleSelectFormInput = (event) => {\n  //   setNewComment({ ...newComment, [event.target.name]: event.target.value });\n  // };\n\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n  useEffect(() => {\n    const submitComment = async () => {\n      if (submitFlag) {\n        const videoId = selectedVideoInfo.id;\n        const postCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments?api_key=${brainFlixApiKey}`;\n        try {\n          console.log(\"Posting comment to:\", postCommentUrl, \"with payload:\", newComment);\n          await axios.post(postCommentUrl, {\n            name: newComment.name,\n            comment: newComment.comment\n          });\n          setNewComment({\n            name: \"\",\n            comment: \"\"\n          }); // Reset form\n          fetchVideoDetails(videoId); // Refresh comments\n        } catch (error) {\n          console.error(\"Failed to post this comment:\", error);\n        } finally {\n          setSubmitFlag(false); // Reset flag regardless of success or failure\n        }\n      }\n    };\n    submitComment();\n  }, [submitFlag, newComment, selectedVideoInfo.id, fetchVideoDetails]);\n  const handleSelectFormInput = event => {\n    setNewComment({\n      ...newComment,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSummitComment = event => {\n    event.preventDefault();\n    setSubmitFlag(true); // Trigger useEffect to submit the comment\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comment__title\",\n        children: [(_selectedVideoInfo$co = selectedVideoInfo.comments) === null || _selectedVideoInfo$co === void 0 ? void 0 : _selectedVideoInfo$co.length, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"comment__avatar\",\n          src: avatarImage,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSummitComment,\n          className: \"comment__form\",\n          id: \"comment__form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__container-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newComment\",\n              className: \"comment__label-form\",\n              children: \"JOIN THE CONVERSATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment__textAreaAndButton\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: handleSelectFormInput,\n                value: newComment.name,\n                className: \"comment__input\",\n                placeholder: \"Your name\",\n                required: true,\n                id: \"name\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: handleSelectFormInput,\n                value: newComment.comment,\n                className: \"comment__textarea-form\",\n                placeholder: \"Add a new comment\",\n                required: true,\n                id: \"comment\",\n                name: \"comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment__buttonIconStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment__upload\",\n                  children: \"COMMENT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: commentButtonICon,\n                  alt: \"BrainFlix iconbutton\",\n                  className: \"comment__buttonIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"existing__comments\",\n        children: (_selectedVideoInfo$co2 = selectedVideoInfo.comments) === null || _selectedVideoInfo$co2 === void 0 ? void 0 : _selectedVideoInfo$co2.sort((a, b) => b.timestamp - a.timestamp).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"existing__ids\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"existing__divide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"existing_innerctn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"existing__avatar-two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"existing__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"existing__dateName\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"existing__details-name\",\n                  children: comment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"existing__details-date\",\n                  children: dateAndTimeOfComment(comment.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"existing__details-text\",\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n// Export the Comment component for use in other parts of the application\n_s(Comment, \"t2e30XjYBMA9I7PkZTqG0l/n/b0=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["React","avatarImage","commentButtonICon","axios","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","selectedVideoInfo","dateAndTimeOfComment","fetchVideoDetails","_s","_selectedVideoInfo$co","_selectedVideoInfo$co2","newComment","setNewComment","comment","name","brainFlixApiKey","submitComment","submitFlag","videoId","id","postCommentUrl","console","log","post","error","setSubmitFlag","handleSelectFormInput","event","target","value","handleSummitComment","preventDefault","children","className","comments","length","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","htmlFor","type","onChange","placeholder","required","sort","a","b","timestamp","map","_c","$RefreshReg$"],"sources":["/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/Comment/Comment.jsx"],"sourcesContent":["// Comment.jsx\nimport React from \"react\";\nimport \"./Comment.scss\";\n// Import statements to include avatar and comment button icon images from assets\nimport avatarImage from \"../../assets/Images/Mohan-muruge.jpg\";\nimport commentButtonICon from \"../../assets/Icons/add_comment.svg\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\n\nconst Comment = ({\n  selectedVideoInfo,\n  dateAndTimeOfComment,\n  fetchVideoDetails\n}) => {\n  const [newComment, setNewComment] = useState({\n    comment: \"\",\n    name: \"\",\n   \n  });\n  // const handleSelectFormInput = (event) => {\n  //   setNewComment({ ...newComment, [event.target.name]: event.target.value });\n  // };\n\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n  useEffect(() => {\n    const submitComment = async () => {\n      if (submitFlag) {\n        const videoId = selectedVideoInfo.id;\n        const postCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments?api_key=${brainFlixApiKey}`;\n        try {\n          console.log(\"Posting comment to:\", postCommentUrl, \"with payload:\", newComment);\n          await axios.post(postCommentUrl, {\n            name: newComment.name,\n            comment: newComment.comment,\n          });\n          setNewComment({ name: \"\", comment: \"\" }); // Reset form\n          fetchVideoDetails(videoId); // Refresh comments\n        } catch (error) {\n          console.error(\"Failed to post this comment:\", error);\n        } finally {\n          setSubmitFlag(false); // Reset flag regardless of success or failure\n        }\n      }\n    };\n    submitComment();\n  }, [submitFlag, newComment, selectedVideoInfo.id, fetchVideoDetails]);\n\n  const handleSelectFormInput = (event) => {\n    setNewComment({ ...newComment, [event.target.name]: event.target.value });\n  };\n\n  const handleSummitComment = (event) => {\n    event.preventDefault();\n    setSubmitFlag(true); // Trigger useEffect to submit the comment\n  };\n\n  return (\n    <>\n      <section className=\"comment\">\n        <h3 className=\"comment__title\">\n          {selectedVideoInfo.comments?.length} Comments\n        </h3>\n        <div className=\"comment__container\">\n          <img className=\"comment__avatar\" src={avatarImage} alt=\"Avatar\" />\n          <form\n            onSubmit={handleSummitComment}\n            className=\"comment__form\"\n            id=\"comment__form\"\n          >\n            <div className=\"comment__container-form\">\n              <label htmlFor=\"newComment\" className=\"comment__label-form\">\n                JOIN THE CONVERSATION\n              </label>\n              <div className=\"comment__textAreaAndButton\">\n                <input\n                  type=\"text\"\n                  onChange={handleSelectFormInput}\n                  value={newComment.name}\n                  className=\"comment__input\"\n                  placeholder=\"Your name\"\n                  required\n                  id=\"name\"\n                  name=\"name\"\n                />\n\n                <textarea\n                  onChange={handleSelectFormInput}\n                  value={newComment.comment}\n                  className=\"comment__textarea-form\"\n                  placeholder=\"Add a new comment\"\n                  required\n                  id=\"comment\"\n                  name=\"comment\"\n                ></textarea>\n                <div className=\"comment__buttonIconStyle\">\n                  <button className=\"comment__upload\">COMMENT</button>\n                  <img\n                    src={commentButtonICon}\n                    alt=\"BrainFlix iconbutton\"\n                    className=\"comment__buttonIcon\"\n                  />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"existing__comments\">\n          {selectedVideoInfo.comments?.sort((a, b) => b.timestamp - a.timestamp).map((comment) => (\n            <div key={comment.id} className=\"existing__ids\">\n              <div className=\"existing__divide\"></div>\n              <div className=\"existing_innerctn\">\n                <div className=\"existing__avatar-two\"></div>\n                <div className=\"existing__details\">\n                  <div className=\"existing__dateName\">\n                    <h3 className=\"existing__details-name\">{comment.name}</h3>\n                    <p className=\"existing__details-date\">\n                      {dateAndTimeOfComment(comment.timestamp)}\n                    </p>\n                  </div>\n                  <p className=\"existing__details-text\">{comment.comment}</p>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </>\n  );\n};\n\n// Export the Comment component for use in other parts of the application\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}