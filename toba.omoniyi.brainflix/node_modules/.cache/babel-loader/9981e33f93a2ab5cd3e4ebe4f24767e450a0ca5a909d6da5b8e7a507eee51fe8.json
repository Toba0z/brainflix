{"ast":null,"code":"var _jsxFileName = \"/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/Comment/Comment.jsx\",\n  _s = $RefreshSig$();\n// Comment.jsx\nimport \"./Comment.scss\";\nimport avatarImage from \"../../assets/Images/Mohan-muruge.jpg\";\nimport commentButtonICon from \"../../assets/Icons/add_comment.svg\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport dateAndTimeOfComment from \"../../Utils/Utils\";\n\n// The Comment component receives selectedVideoInfo and setSelectedVideoInfo props for managing video comments\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Comment = ({\n  selectedVideoInfo,\n  setSelectedVideoInfo\n}) => {\n  _s();\n  var _selectedVideoInfo$co, _selectedVideoInfo$co2;\n  // State for handling new comment input fields\n  const [newComment, setNewComment] = useState({\n    comment: \"\",\n    name: \"\"\n  });\n\n  // Handles changes in the comment form's input fields and updates the state\n  const handleSelectFormInput = event => {\n    setNewComment({\n      ...newComment,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  // API key for authentication with your backend\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n\n  // Handles the submission of a new comment\n  const handleSummitComment = async event => {\n    event.preventDefault(); // Prevents the default form submission behavior\n    const videoId = selectedVideoInfo.id; // Retrieves the current video ID\n    const postCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments?api_key=${brainFlixApiKey}`;\n    try {\n      // Submits the new comment to the backend\n      await axios.post(postCommentUrl, {\n        name: newComment.name,\n        comment: newComment.comment\n      });\n\n      // Clears the form fields after successful submission\n      setNewComment({\n        name: \"\",\n        comment: \"\"\n      });\n\n      // Fetches the updated list of comments from the backend\n      const getComment = async () => {\n        const response = await axios.get(`https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}?api_key=${brainFlixApiKey}`);\n        setSelectedVideoInfo(response.data); // Updates the local state with the new comment data\n      };\n      getComment();\n    } catch (error) {\n      console.error(\"Failed to post this comment:\", error);\n    }\n  };\n\n  // Function to delete a comment\n  const deleteComment = async (videoId, commentId) => {\n    const deleteCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments/${commentId}?api_key=${brainFlixApiKey}`;\n    try {\n      await axios.delete(deleteCommentUrl); // Sends a request to delete the comment\n\n      // Filters out the deleted comment from the current list and updates the state\n      const updateComments = selectedVideoInfo.comments.filter(comment => comment.id !== commentId);\n      setSelectedVideoInfo({\n        ...selectedVideoInfo,\n        comments: updateComments\n      });\n    } catch (error) {\n      console.log(\"Failed to delete comment:\", error);\n    }\n  };\n\n  // Renders the comment section of the component\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"comment\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"comment__title\",\n        children: [(_selectedVideoInfo$co = selectedVideoInfo.comments) === null || _selectedVideoInfo$co === void 0 ? void 0 : _selectedVideoInfo$co.length, \" Comments\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"comment__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"comment__avatar\",\n          src: avatarImage,\n          alt: \"Avatar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSummitComment,\n          className: \"comment__form\",\n          id: \"comment__form\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment__container-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"newComment\",\n              className: \"comment__label-form\",\n              children: \"JOIN THE CONVERSATION\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment__textAreaAndButton\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: handleSelectFormInput,\n                value: newComment.name,\n                className: \"comment__input\",\n                placeholder: \"Your name\",\n                required: true,\n                id: \"name\",\n                name: \"name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                onChange: handleSelectFormInput,\n                value: newComment.comment,\n                className: \"comment__textarea-form\",\n                placeholder: \"Add a new comment\",\n                required: true,\n                id: \"comment\",\n                name: \"comment\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"comment__buttonIconStyle\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"comment__upload\",\n                  children: \"COMMENT\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: commentButtonICon,\n                  alt: \"BrainFlix iconbutton\",\n                  className: \"comment__buttonIcon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"existing__comments\",\n        children: (_selectedVideoInfo$co2 = selectedVideoInfo.comments) === null || _selectedVideoInfo$co2 === void 0 ? void 0 : _selectedVideoInfo$co2.sort((a, b) => b.timestamp - a.timestamp).map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"existing__ids\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"existing__divide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"existing_innerctn\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"existing__avatar-two\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"existing__details\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"existing__dateName\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"existing__details-name\",\n                  children: comment.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"existing__details-date\",\n                  children: dateAndTimeOfComment(comment.timestamp)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"existing__details-text\",\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => deleteComment(selectedVideoInfo.id, comment.id),\n                className: \"existing__buttonOne\",\n                children: \"DELETE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Comment, \"6rRe1SHkHx4i2NST/ZLEm+u2FaA=\");\n_c = Comment;\nexport default Comment;\nvar _c;\n$RefreshReg$(_c, \"Comment\");","map":{"version":3,"names":["avatarImage","commentButtonICon","axios","useState","dateAndTimeOfComment","jsxDEV","_jsxDEV","Fragment","_Fragment","Comment","selectedVideoInfo","setSelectedVideoInfo","_s","_selectedVideoInfo$co","_selectedVideoInfo$co2","newComment","setNewComment","comment","name","handleSelectFormInput","event","target","value","brainFlixApiKey","handleSummitComment","preventDefault","videoId","id","postCommentUrl","post","getComment","response","get","data","error","console","deleteComment","commentId","deleteCommentUrl","delete","updateComments","comments","filter","log","children","className","length","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onSubmit","htmlFor","type","onChange","placeholder","required","sort","a","b","timestamp","map","onClick","_c","$RefreshReg$"],"sources":["/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/components/Comment/Comment.jsx"],"sourcesContent":["// Comment.jsx\nimport \"./Comment.scss\";\nimport avatarImage from \"../../assets/Images/Mohan-muruge.jpg\";\nimport commentButtonICon from \"../../assets/Icons/add_comment.svg\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport dateAndTimeOfComment from \"../../Utils/Utils\";\n\n// The Comment component receives selectedVideoInfo and setSelectedVideoInfo props for managing video comments\nconst Comment = ({ selectedVideoInfo, setSelectedVideoInfo }) => {\n  // State for handling new comment input fields\n  const [newComment, setNewComment] = useState({\n    comment: \"\",\n    name: \"\",\n  });\n\n  // Handles changes in the comment form's input fields and updates the state\n  const handleSelectFormInput = (event) => {\n    setNewComment({ ...newComment, [event.target.name]: event.target.value });\n  };\n\n  // API key for authentication with your backend\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n\n  // Handles the submission of a new comment\n  const handleSummitComment = async (event) => {\n    event.preventDefault(); // Prevents the default form submission behavior\n    const videoId = selectedVideoInfo.id; // Retrieves the current video ID\n    const postCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments?api_key=${brainFlixApiKey}`;\n\n    try {\n      // Submits the new comment to the backend\n      await axios.post(postCommentUrl, {\n        name: newComment.name,\n        comment: newComment.comment,\n      });\n\n      // Clears the form fields after successful submission\n      setNewComment({ name: \"\", comment: \"\" });\n\n      // Fetches the updated list of comments from the backend\n      const getComment = async () => {\n        const response = await axios.get(\n          `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}?api_key=${brainFlixApiKey}`\n        );\n        setSelectedVideoInfo(response.data); // Updates the local state with the new comment data\n      };\n      getComment();\n    } catch (error) {\n      console.error(\"Failed to post this comment:\", error);\n    }\n  };\n\n  // Function to delete a comment\n  const deleteComment = async (videoId, commentId) => {\n    const deleteCommentUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}/comments/${commentId}?api_key=${brainFlixApiKey}`;\n\n    try {\n      await axios.delete(deleteCommentUrl); // Sends a request to delete the comment\n\n      // Filters out the deleted comment from the current list and updates the state\n      const updateComments = selectedVideoInfo.comments.filter(comment => comment.id !== commentId);\n      setSelectedVideoInfo({ ...selectedVideoInfo, comments: updateComments });\n    } catch (error) {\n      console.log(\"Failed to delete comment:\", error);\n    }\n  };\n\n  // Renders the comment section of the component\n  return (\n    <>\n      <section className=\"comment\">\n        <h3 className=\"comment__title\">\n          {selectedVideoInfo.comments?.length} Comments\n        </h3>\n        <div className=\"comment__container\">\n          <img className=\"comment__avatar\" src={avatarImage} alt=\"Avatar\" />\n          <form onSubmit={handleSummitComment} className=\"comment__form\" id=\"comment__form\">\n            <div className=\"comment__container-form\">\n              <label htmlFor=\"newComment\" className=\"comment__label-form\">JOIN THE CONVERSATION</label>\n              <div className=\"comment__textAreaAndButton\">\n                <input type=\"text\" onChange={handleSelectFormInput} value={newComment.name} className=\"comment__input\" placeholder=\"Your name\" required id=\"name\" name=\"name\" />\n                <textarea onChange={handleSelectFormInput} value={newComment.comment} className=\"comment__textarea-form\" placeholder=\"Add a new comment\" required id=\"comment\" name=\"comment\"></textarea>\n                <div className=\"comment__buttonIconStyle\">\n                  <button className=\"comment__upload\">COMMENT</button>\n                  <img src={commentButtonICon} alt=\"BrainFlix iconbutton\" className=\"comment__buttonIcon\" />\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n\n        {/* Renders a list of existing comments, each with a delete button */}\n        <div className=\"existing__comments\">\n          {selectedVideoInfo.comments?.sort((a, b) => b.timestamp - a.timestamp).map((comment) => (\n            <div key={comment.id} className=\"existing__ids\">\n              <div className=\"existing__divide\"></div>\n              <div className=\"existing_innerctn\">\n                <div className=\"existing__avatar-two\"></div>\n                <div className=\"existing__details\">\n                  <div className=\"existing__dateName\">\n                    <h3 className=\"existing__details-name\">{comment.name}</h3>\n                    <p className=\"existing__details-date\">{dateAndTimeOfComment(comment.timestamp)}</p>\n                  </div>\n                  <p className=\"existing__details-text\">{comment.comment}</p>\n                  <button onClick={() => deleteComment(selectedVideoInfo.id, comment.id)} className=\"existing__buttonOne\">DELETE</button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default Comment;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}