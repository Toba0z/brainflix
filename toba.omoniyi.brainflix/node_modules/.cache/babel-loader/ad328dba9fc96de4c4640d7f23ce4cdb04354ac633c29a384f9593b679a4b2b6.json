{"ast":null,"code":"var _jsxFileName = \"/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/App.jsx\",\n  _s = $RefreshSig$();\n// App.jsx\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport Uploads from \"./pages/Uploads/Uploads\";\nimport axios from \"axios\";\n\n// 2515aa87-f829-40de-ade0-d0166853f149\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedVideoInfo, setSelectedVideoInfo] = useState({});\n  const [videosInfo, setVideosInfo] = useState([]);\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n  // useEffect(() => {\n  //   const fetchVideos = async () => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setVideosInfo(response.data);\n  //       // selectedVideoInfo(response.data[0])\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //   };\n  //   fetchVideos();\n  // }, []);\n\n  // useEffect(() => {\n  //   const getSpecificVideo= async (videoId) => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setSelectedVideoInfo(response.data);\n  //       console.log(\"got first selected videos\", selectedVideoInfo);\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //    //{videoID} = userParams(); console.log(videoID) --> null --> false\n  //     if (videoId) {   \n  //       getSpecificVideo(videoId);\n  //     } else {\n  //       getSpecificVideo(\"84e96018-4022-434e-80bf-000ce4cd12b8\");\n  //     }\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const fetchVideos = async () => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setVideosInfo(response.data);\n  //       setSelectedVideoInfo(response.data[0]); // Auto-select the first video initially\n  //       console.log(\"response from api:\", selectedVideoInfo);\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //   };\n  //   fetchVideos();\n  // }, []);\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      const videosUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n      try {\n        const {\n          data\n        } = await axios.get(videosUrl);\n        setVideosInfo(data);\n        // No need to set selectedVideoInfo here; HomePage will handle it based on URL\n      } catch (error) {\n        console.error(\"Could not fetch videos!\", error);\n      }\n    };\n    fetchVideos();\n  }, []);\n  const handleVideoSelect = videoId => {\n    const newSelectedVideo = videosInfo.find(video => video.id === videoId);\n    setSelectedVideoInfo(newSelectedVideo);\n  };\n\n  // const sideVideos = videosInfo.filter(\n  //   (video) => video.id !== selectedVideoInfo.id\n  // );\n\n  const dateAndTimeOfComment = date => {\n    const now = new Date();\n    const CommentDate = new Date(date);\n    const differenceInSeconds = Math.round((now - CommentDate) / 1000);\n    if (differenceInSeconds < 60) {\n      return `${differenceInSeconds} seconds ago`;\n    } else if (differenceInSeconds < 3600) {\n      return `${Math.round(differenceInSeconds / 60)} minutes ago`;\n    } else if (differenceInSeconds < 86400) {\n      return `${Math.round(differenceInSeconds / 3600)} hours ago`;\n    } else if (differenceInSeconds < 2592000) {\n      return `${Math.round(differenceInSeconds / 86400)} days ago`;\n    } else if (differenceInSeconds < 31104000) {\n      return `${Math.round(differenceInSeconds / 2592000)} months ago`;\n    } else {\n      return `${Math.round(differenceInSeconds / 31104000)} years ago`;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            selectedVideoInfo: selectedVideoInfo,\n            sideVideos: sideVideos,\n            handleVideoSelect: handleVideoSelect,\n            dateAndTimeOfComment: dateAndTimeOfComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:videoId\",\n          element: /*#__PURE__*/_jsxDEV(HomePage, {\n            selectedVideoInfo: selectedVideoInfo,\n            setSelectedVideoInfo: setSelectedVideoInfo,\n            videosInfo: videosInfo,\n            sideVideos: sideVideos,\n            handleVideoSelect: handleVideoSelect,\n            dateAndTimeOfComment: dateAndTimeOfComment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/uploads\",\n          element: /*#__PURE__*/_jsxDEV(Uploads, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VRqqYDR0hP3h0dYs/B0L8Y3RQ9Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Routes","Route","Header","HomePage","Uploads","axios","jsxDEV","_jsxDEV","App","_s","selectedVideoInfo","setSelectedVideoInfo","videosInfo","setVideosInfo","brainFlixApiKey","fetchVideos","videosUrl","data","get","error","console","handleVideoSelect","videoId","newSelectedVideo","find","video","id","dateAndTimeOfComment","date","now","Date","CommentDate","differenceInSeconds","Math","round","children","className","fileName","_jsxFileName","lineNumber","columnNumber","path","element","sideVideos","_c","$RefreshReg$"],"sources":["/Users/tobaomo/Documents/BSWeek7PjBrainFlix/brainflix/toba.omoniyi.brainflix/src/App.jsx"],"sourcesContent":["// App.jsx\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport \"./App.scss\";\nimport Header from \"./components/Header/Header\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport Uploads from \"./pages/Uploads/Uploads\";\nimport axios from \"axios\";\n\n// 2515aa87-f829-40de-ade0-d0166853f149\nconst App = () => {\n  const [selectedVideoInfo, setSelectedVideoInfo] = useState({});\n  const [videosInfo, setVideosInfo] = useState([]);\n\n  const brainFlixApiKey = \"2515aa87-f829-40de-ade0-d0166853f149\";\n  // useEffect(() => {\n  //   const fetchVideos = async () => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setVideosInfo(response.data);\n  //       // selectedVideoInfo(response.data[0])\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //   };\n  //   fetchVideos();\n  // }, []);\n\n  // useEffect(() => {\n  //   const getSpecificVideo= async (videoId) => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos/${videoId}?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setSelectedVideoInfo(response.data);\n  //       console.log(\"got first selected videos\", selectedVideoInfo);\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //    //{videoID} = userParams(); console.log(videoID) --> null --> false\n  //     if (videoId) {   \n  //       getSpecificVideo(videoId);\n  //     } else {\n  //       getSpecificVideo(\"84e96018-4022-434e-80bf-000ce4cd12b8\");\n  //     }\n  //   };\n  // }, []);\n\n  // useEffect(() => {\n  //   const fetchVideos = async () => {\n  //     const commentsUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n  //     try {\n  //       const response = await axios.get(commentsUrl);\n  //       setVideosInfo(response.data);\n  //       setSelectedVideoInfo(response.data[0]); // Auto-select the first video initially\n  //       console.log(\"response from api:\", selectedVideoInfo);\n  //     } catch (error) {\n  //       console.error(\"Could not fetch Data!\", error);\n  //     }\n  //   };\n  //   fetchVideos();\n  // }, []);\n\n  useEffect(() => {\n    const fetchVideos = async () => {\n      const videosUrl = `https://unit-3-project-api-0a5620414506.herokuapp.com/videos?api_key=${brainFlixApiKey}`;\n      try {\n        const { data } = await axios.get(videosUrl);\n        setVideosInfo(data);\n        // No need to set selectedVideoInfo here; HomePage will handle it based on URL\n      } catch (error) {\n        console.error(\"Could not fetch videos!\", error);\n      }\n    };\n    fetchVideos();\n  }, []);\n\n\n\n  const handleVideoSelect = (videoId) => {\n    const newSelectedVideo = videosInfo.find((video) => video.id === videoId);\n    setSelectedVideoInfo(newSelectedVideo);\n  };\n\n  // const sideVideos = videosInfo.filter(\n  //   (video) => video.id !== selectedVideoInfo.id\n  // );\n\n  const dateAndTimeOfComment = (date) => {\n    const now = new Date();\n    const CommentDate = new Date(date);\n    const differenceInSeconds = Math.round((now - CommentDate) / 1000);\n\n    if (differenceInSeconds < 60) {\n      return `${differenceInSeconds} seconds ago`;\n    } else if (differenceInSeconds < 3600) {\n      return `${Math.round(differenceInSeconds / 60)} minutes ago`;\n    } else if (differenceInSeconds < 86400) {\n      return `${Math.round(differenceInSeconds / 3600)} hours ago`;\n    } else if (differenceInSeconds < 2592000) {\n      return `${Math.round(differenceInSeconds / 86400)} days ago`;\n    } else if (differenceInSeconds < 31104000) {\n      return `${Math.round(differenceInSeconds / 2592000)} months ago`;\n    } else {\n      return `${Math.round(differenceInSeconds / 31104000)} years ago`;\n    }\n  };\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Header />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <HomePage\n                selectedVideoInfo={selectedVideoInfo}\n                sideVideos={sideVideos}\n                handleVideoSelect={handleVideoSelect}\n                dateAndTimeOfComment={dateAndTimeOfComment}\n              />\n            }\n          ></Route>\n          <Route\n            path=\"/:videoId\"\n            element={\n              <HomePage\n                selectedVideoInfo={selectedVideoInfo}\n                setSelectedVideoInfo ={setSelectedVideoInfo}\n                videosInfo ={videosInfo}\n                sideVideos={sideVideos}\n                handleVideoSelect={handleVideoSelect}\n                dateAndTimeOfComment={dateAndTimeOfComment}\n              />\n            }\n          ></Route>\n          <Route path=\"/uploads\" element={<Uploads />}></Route>\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n};\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}